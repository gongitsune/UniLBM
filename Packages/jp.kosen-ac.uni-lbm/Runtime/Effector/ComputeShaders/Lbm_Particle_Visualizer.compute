#pragma kernel init
#pragma kernel draw

#define FLUID_TYPE 0
#define BOUNDARY_TYPE 1

#define THREAD_NUM 2

#include "Packages/jp.kosen-ac.uni-lbm/Runtime/Effector/Shaders/particle_data.hlsl"
#include "Packages/jp.kosen-ac.uni-lbm/ShaderLibraly/lbm_utility.hlsl"

float delta_time;
float4 hsv_param; // x: hue_speed, y: saturation, z: value, w: alpha 
int cell_size;
int num_particles;
StructuredBuffer<uint> field;
StructuredBuffer<float3> velocity;
RWStructuredBuffer<particle_data> particles;

[numthreads(THREAD_NUM, THREAD_NUM, THREAD_NUM)]
void init(in uint3 id: SV_DispatchThreadID)
{
    uint p_idx = get_index(id, num_particles);

    particles[p_idx].prev_pos = particles[p_idx].pos = frac((float3)id / num_particles);
    particles[p_idx].col = float4(0.3f, 0.3f, 0.5f, 1.0f);
}

[numthreads(THREAD_NUM, THREAD_NUM, THREAD_NUM)]
void draw(in uint3 id: SV_DispatchThreadID)
{
    uint p_idx = get_index(id, num_particles);
    float3 p_pos = particles[p_idx].pos;
    uint cell_idx = get_index(uint3(p_pos * cell_size), cell_size);

    // 障害物セルの場合
    bool is_boundary = field[cell_idx] == BOUNDARY_TYPE;
    float3 b_pos = frac((float3)id / num_particles);
    float3 b_prev_pos = b_pos + float3(0, 0.005, 0);
    const float4 b_col = float4(1.f, 1.f, 1.f, 1.0f);

    // 流体セルの場合
    float3 prev = p_pos;

    p_pos += velocity[cell_idx] * delta_time;
    p_pos = frac(p_pos);

    cell_idx = get_index(uint3(p_pos * cell_size), cell_size);

    // 動かした結果不正な値になった場合
    bool is_invalid = any(isnan(p_pos)) || any(abs(p_pos - 0.5f) > 0.5f) || field[cell_idx] != FLUID_TYPE;
    p_pos = is_invalid ? random3((float3)id / num_particles) * 0.9f + 0.05f : p_pos;
    prev = is_invalid ? p_pos : prev;

    // 更新
    particles[p_idx].prev_pos = is_boundary ? b_prev_pos : prev;
    particles[p_idx].pos = is_boundary ? b_pos : p_pos;

    float vel_length = saturate(length(velocity[cell_idx]) * hsv_param.x);
    float4 col = float4(hsv_2_rgb(float3(vel_length, hsv_param.yz)), hsv_param.w);

    // update
    particles[p_idx].col = is_boundary ? b_col : col;
}
